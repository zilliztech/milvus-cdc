name: Test

on:
  push:
      branches:
      - main
  pull_request:
      branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  milvus-cdc-sync-request-test:
      name: CDC Sync Request Test
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          include:
          - metastore: etcd
            upstream_channel_num: 4
            downstream_channel_num: 8
          - metastore: etcd
            upstream_channel_num: 4
            downstream_channel_num: 16
          - metastore: etcd
            upstream_channel_num: 16
            downstream_channel_num: 8
          - metastore: etcd
            upstream_channel_num: 16
            downstream_channel_num: 16
          - metastore: mysql
            upstream_channel_num: 16
            downstream_channel_num: 16
      steps:
      - uses: actions/checkout@v4

      - name: Set up MySQL
        if: matrix.metastore == 'mysql'
        run: |
          cd deployment/docker
          docker compose -f docker-compose-mysql.yml up -d
          # Wait for MySQL to be ready
          for i in {1..30}; do
            if docker exec milvus-cdc-mysql mysql --protocol=tcp -h127.0.0.1 -uroot -proot -e "SELECT 1;" &>/dev/null; then
              echo "MySQL is ready!"
              docker exec milvus-cdc-mysql mysql --protocol=tcp -h127.0.0.1 -uroot -proot -e "show databases;"
              break
            fi
            echo "Waiting for MySQL to be ready... ($i/30)"
            sleep 2
          done

      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache-dependency-path: server/go.sum
          cache: true

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python dependencies
        timeout-minutes: 15
        working-directory: tests
        shell: bash
        run: |
          pip install -r requirements.txt

      - name: Build CDC
        timeout-minutes: 15
        working-directory: server
        shell: bash
        run: |
          make build
          ls -l
      - name: Update CDC Config
        timeout-minutes: 15
        working-directory: server
        shell: bash
        run: |
          cp ../deployment/docker/cdc.yaml configs/cdc.yaml
          if [ "${{ matrix.metastore }}" == "mysql" ]; then
            yq -i '.metaStoreConfig.storeType = "mysql"' configs/cdc.yaml
          fi
          yq -i '.sourceConfig.channelNum = ${{ matrix.upstream_channel_num }}' configs/cdc.yaml
      - name: Update Milvus Config
        timeout-minutes: 15
        working-directory: tests/deployment/milvus/
        shell: bash
        run: |
          yq -i '.rootCoord.dmlChannelNum = ${{ matrix.upstream_channel_num }}' upstream.yaml
          yq -i '.rootCoord.dmlChannelNum = ${{ matrix.downstream_channel_num }}' downstream.yaml
          cat upstream.yaml
          cat downstream.yaml


      - name: Deploy Upstream and Downstream Milvus
        timeout-minutes: 15
        shell: bash
        working-directory: tests/deployment/milvus/
        run: |
          for i in {1..3}; do
            sudo docker compose up -d --wait && break
            echo "Retry $i: docker compose up failed, retrying in 10s..."
            sleep 10
          done
          sudo docker compose ps -a


      - name: Deploy Milvus CDC (${{ matrix.metastore }} metastore)
        timeout-minutes: 15
        working-directory: server
        shell: bash
        run: |
          ../bin/cdc > server.log 2>&1 &
          sleep 20s

      - name: Create CDC task
        working-directory: tests/deployment
        timeout-minutes: 15
        run: |
          python cdc_task_op.py --cdc_host 127.0.0.1 --downstream_uri http://127.0.0.1:19500 --downstream_token root:Milvus --channel_num ${{ matrix.downstream_channel_num }} --op_name create
          python cdc_task_op.py --cdc_host 127.0.0.1 --op_name list

      
      - name: Run test
        timeout-minutes: 30
        shell: bash
        working-directory: tests
        run: |
          pytest testcases/test_cdc_sync_requests.py --upstream_host 127.0.0.1 --upstream_port 19530 --downstream_host 127.0.0.1 --downstream_port 19500

      - name: List CDC task
        if: ${{ always() }}
        timeout-minutes: 15
        working-directory: tests/deployment
        shell: bash
        run: |
          python cdc_task_op.py --cdc_host 127.0.0.1 --op_name list

      - name: Export logs
        if: ${{ always() }}
        timeout-minutes: 5
        run: |
          docker ps -a || true
          mkdir -p logs
          sudo cp -r tests/deployment/milvus/logs logs/
          sudo cp server/server.log logs/
          sudo chown -R $USER:$USER logs/
          sudo chmod -R 755 logs/

      - name: Upload logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: func-test-logs-${{ matrix.metastore }}-${{ matrix.upstream_channel_num }}-${{ matrix.downstream_channel_num }}
          path: |
            logs
